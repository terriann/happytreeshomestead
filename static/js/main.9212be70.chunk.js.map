{"version":3,"sources":["assets/logo-wide-black.png","assets/logo-white.png","layout/header.js","layout/body.js","components/hero.js","components/intro.js","layout/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","class","src","logo","alt","Body","props","children","Intro","Footer","year","Date","getFullYear","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0HAAAA,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,qOCwB5BC,MAnBf,WACE,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,aACb,yBAAKC,MAAM,UACT,yBAAKA,MAAM,eACT,yBACEC,IAAKC,IACLH,UAAU,OACVI,IAAI,2EAGR,yBAAKH,MAAM,yBAAX,YCXKI,MAJf,SAAcC,GACZ,OAAO,yBAAKN,UAAU,QAAQM,EAAMC,W,sBCkBvBC,MAjBf,WACE,OACE,yBAAKR,UAAU,SACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,aACb,yBAAKC,MAAM,sCACT,yBACEC,IAAKC,IACLC,IAAI,mF,MCmBHI,MA5Bf,WACE,OACE,yBAAKR,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,oBAAb,6KAMA,uBAAGA,UAAU,oBAAb,sEAIA,uBAAGA,UAAU,oBAAb,iLCGGS,MApBf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cAExB,OACE,4BAAQZ,UAAU,kCAChB,yBAAKC,MAAM,aACT,uBAAGD,UAAU,eAAb,aACeU,EADf,wCAC8D,IAC5D,uBACEG,KAAK,kDACLb,UAAU,cAFZ,c,MCYKc,MAdf,WACE,OACE,yBAAKd,UAAU,OAEb,kBAAC,EAAD,MACA,kBAAC,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAAC,EAAD,QCLce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9212be70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-wide-black.a20d8059.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.41a349b1.png\";","import React from \"react\";\nimport logo from \"../assets/logo-wide-black.png\";\n\nimport \"./header.scss\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div class=\"d-flex\">\n          <div class=\"mr-auto p-2\">\n            <img\n              src={logo}\n              className=\"logo\"\n              alt=\"Logo for Happy Trees Homestead in black including icon of a pine tree\"\n            />\n          </div>\n          <div class=\"p-2 align-self-center\">Home</div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Body(props) {\n  return <div className=\"body\">{props.children}</div>;\n}\n\nexport default Body;\n","import React from \"react\";\nimport logo from \"../assets/logo-white.png\";\nimport \"./hero.scss\";\n\nfunction Intro() {\n  return (\n    <div className=\"intro\">\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <div class=\"d-flex justify-content-center py-4\">\n            <img\n              src={logo}\n              alt=\"Logo for Happy Trees Homestead including icon of a pine tree and est 2018\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Intro;\n","import React from \"react\";\nimport \"./intro.scss\";\n\nfunction Intro() {\n  return (\n    <div className=\"intro py-5\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-8\">\n            <p className=\"py-2 text-center\">\n              Established in 2018, Happy Trees Homestead is the name we gave to\n              a place that we are raising our food. It looks great on the\n              homemade labels we use on our canned goods.\n            </p>\n\n            <p className=\"py-2 text-center\">\n              We are a private residence. We are not a goods-for-sale homestead.\n            </p>\n\n            <p className=\"py-2 text-center\">\n              Our goals this year include: growing our skills in\n              self-sufficiency through gardening, raising animals, preserving,\n              hunting, foraging, eating well &amp; living a good life.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Intro;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n\n  return (\n    <footer className=\"footer bg-dark text-white py-4\">\n      <div class=\"container\">\n        <p className=\"text-center\">\n          &copy; 2018-{year} Happy Trees Homestead &middot; Hosted on{\" \"}\n          <a\n            href=\"https://github.com/terriann/happytreeshomestead\"\n            className=\"text-white\"\n          >\n            github\n          </a>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from './layout/header';\nimport Body from './layout/body';\nimport Hero from './components/hero';\nimport Intro from './components/intro';\nimport Footer from './layout/footer';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Header />\n      <Body>\n          <Hero />\n          <Intro />\n      </Body>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}